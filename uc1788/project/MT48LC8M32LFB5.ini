FUNC void PinSel(int p1, int n1, int f1)
{
    _WDWORD(0x4002C000 + (p1 * 32 + n1) * 4, 0x8 | f1);
}

FUNC void InitSDRAM(void)
{
    int i;
    
    PinSel(2,16,1);
    PinSel(2,17,1);
    PinSel(2,18,1);
    PinSel(2,20,1);
    PinSel(2,24,1);
    PinSel(2,28,1);
    PinSel(2,29,1);
    PinSel(2,30,1);
    PinSel(2,31,1);

    for(i = 0; i < 32; i++)
        PinSel(3,i,1);
        
    for(i = 0; i < 21; i++)
        PinSel(4,i,1);

    PinSel(4,24,1);
    PinSel(4,25,1);
    PinSel(4,30,1);
    PinSel(4,31,1);
    
    /* PCONP |= 1 << 11 */
    _WDWORD(0x400FC0C4, 0x04288FDE);    // Power On EMC

    /* EMCCONTROL |= 1 */
    _WDWORD(0x2009C000, 0x00000001);    // Enable EMC

    /* EMCDLYCTL */
    _WDWORD(0x400FC1DC, 0x00081818);    // Config data read delay

    /* EMCCONFIG */
    _WDWORD(0x2009C008, 0x00000000);    // Little endian mode

    /* DYNAMICCONTROL */
    _WDWORD(0x2009C020, 0x00000003);    // Set normal self refresh mode, normal power mode
                                        // CE always HI
                                        // Enable clock out
                                        // Clock do not stop during idle

    /* DYNAMICREFRESH */
    _WDWORD(0x2009C024, 0x0000001F);    // refresh timing 

    /* DYNAMICREADCONFIG */
    _WDWORD(0x2009C028, 0x00000001);    // read timing 

    /* DYNAMICRP */
    _WDWORD(0x2009C030, 0x00000002);    // tRP

    /* DYNAMICRAS */
    _WDWORD(0x2009C034, 0x00000003);    // tRAS
    
    /* DYNAMICSREX */
    _WDWORD(0x2009C038, 0x00000005);    // tSREX

    /* DYNAMICAPR */
    _WDWORD(0x2009C03C, 0x00000001);    // tAPR

    /* DYNAMICDAL */
    _WDWORD(0x2009C040, 0x00000005);    // tDAL

    /* DYNAMICWR */
    _WDWORD(0x2009C044, 0x00000003);    // tWR

    /* DYNAMICRC */
    _WDWORD(0x2009C048, 0x00000004);    // tRC

    /* DYNAMICRFC */
    _WDWORD(0x2009C04C, 0x00000004);    // tRFC

    /* DYNAMICXSR */
    _WDWORD(0x2009C050, 0x00000005);    // tXSR

    /* DYNAMICRRD */
    _WDWORD(0x2009C054, 0x00000001);    // tRRD

    /* DYNAMICMRD */
    _WDWORD(0x2009C058, 0x00000003);    // tMRD

    /* DYNAMICCASRAS0 */
    _WDWORD(0x2009C104, 0x00000303);    // RAS/CAS Latency

    /* DYNAMICCONFIG0 */
    _WDWORD(0x2009C100, 0x00004500);    // Config device type as SDRAM
                                        // Config address mapping

    _sleep_(100);                       // Wait 100 ms

    /* DYNAMICCONTROL */
    _WDWORD(0x2009C020, 0x00000183);    // nop command

    _sleep_(100);                       // Wait 100 ms

    /* DYNAMICCONTROL */
    _WDWORD(0x2009C020, 0x00000103);    // pre-charge command
    
//    /* DYNAMICREFRESH */
//    _WDWORD(0x2009C024, 0x00000002);    // refresh timing 

    _sleep_(100);                       // Wait 100 ms

    /* DYNAMICREFRESH */
    _WDWORD(0x2009C024, 0x0000001F);    // refresh timing 
    
    /* DYNAMICCONTROL */
    _WDWORD(0x2009C020, 0x00000083);    // mode command
    _RDWORD(0xA0000000 | (0x32 << (2 + 2 + 8)));
    
    _sleep_(100);                       // Wait 100 ms

    /* DYNAMICCONTROL */
    _WDWORD(0x2009C020, 0x00000003);    // noamal command

    /* DYNAMICCONFIG0 */
    _WDWORD(0x2009C100, 0x00084500);    // enable buffer
    
    _sleep_(100);                       // Wait 100 ms
}
